{"version":3,"file":"commons-42105203a191cfb55e82.js","mappings":"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","sources":["webpack://portfolio/./src/components/base/MenuBar.tsx","webpack://portfolio/./src/components/Layout.tsx","webpack://portfolio/./node_modules/react-icons/lib/esm/iconsManifest.js","webpack://portfolio/./node_modules/react-icons/lib/esm/iconContext.js","webpack://portfolio/./node_modules/react-icons/lib/esm/iconBase.js","webpack://portfolio/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { Link } from 'gatsby';\nimport React, { useState } from 'react';\nimport {\n    AiOutlineClose,\n    AiOutlineContacts,\n    AiOutlineFire,\n    AiOutlineHome,\n    AiOutlineMenu,\n    AiOutlineRise,\n} from 'react-icons/ai';\nimport { motion } from 'framer-motion';\n\nexport default function MenuBar() {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n    return (\n        <div>\n            <div className='md:block hidden fixed bottom-14 right-1/2 translate-x-1/2 z-50'>\n                <div className='flex gap-6 bg-white/40 backdrop-blur-2xl py-5 px-6 rounded-2xl border-2 border-neutral-300/50'>\n                    <Link to='/' className='flex gap-1 items-center'>\n                        <AiOutlineHome size={20} />\n                        <p>HOME</p>\n                    </Link>\n                    <Link to='/about' className='flex gap-1 items-center'>\n                        <AiOutlineContacts size={20} />\n                        <p>ABOUT</p>\n                    </Link>\n                    <Link to='/blog' className='flex gap-1 items-center'>\n                        <AiOutlineRise size={20} />\n                        <p>BLOG</p>\n                    </Link>\n                    <Link to='/skill' className='flex gap-1 items-center'>\n                        <AiOutlineFire size={20} />\n                        <p>SKILL</p>\n                    </Link>\n                </div>\n            </div>\n            <div className='md:hidden fixed top-0 left-0 w-full h-16 px-6 shadow flex bg-white/30 backdrop-blur-lg justify-between items-center z-50'>\n                <div></div>\n                <motion.button\n                    onClick={() => setIsMenuOpen(!isMenuOpen)}\n                    whileTap={{ rotate: 60, scale: 1.2 }}\n                >\n                    {isMenuOpen ? (\n                        <AiOutlineClose size={26} />\n                    ) : (\n                        <AiOutlineMenu size={26} />\n                    )}\n                </motion.button>\n                <motion.div\n                    initial={{ x: 200, y: -500, opacity: 0 }}\n                    animate={\n                        isMenuOpen\n                            ? { x: 0, y: 0, opacity: 1 }\n                            : { x: 200, y: -500, opacity: 0 }\n                    }\n                    transition={{ type: 'spring', duration: 0.5 }}\n                    className='fixed right-6 top-20 flex flex-col gap-4 backdrop-blur-xl bg-white/30 shadow py-6 pr-16 pl-6 rounded-lg z-40'\n                >\n                    <Link to='/' className='flex gap-2 items-center'>\n                        <AiOutlineHome size={24} />\n                        <p>HOME</p>\n                    </Link>\n                    <Link to='/about' className='flex gap-2 items-center'>\n                        <AiOutlineContacts size={24} />\n                        <p>ABOUT</p>\n                    </Link>\n                    <Link to='/blog' className='flex gap-2 items-center'>\n                        <AiOutlineRise size={24} />\n                        <p>BLOG</p>\n                    </Link>\n                    <Link to='/skill' className='flex gap-2 items-center'>\n                        <AiOutlineFire size={24} />\n                        <p>SKILL</p>\n                    </Link>\n                </motion.div>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport MenuBar from './base/MenuBar';\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n    return (\n        <div>\n            <MenuBar />\n            {children}\n        </div>\n    );\n}\n","export var IconsManifest = [\n  {\n    \"id\": \"ci\",\n    \"name\": \"Circum Icons\",\n    \"projectUrl\": \"https://circumicons.com/\",\n    \"license\": \"MPL-2.0 license\",\n    \"licenseUrl\": \"https://github.com/Klarr-Agency/Circum-Icons/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"fa\",\n    \"name\": \"Font Awesome 5\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"fa6\",\n    \"name\": \"Font Awesome 6\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"io\",\n    \"name\": \"Ionicons 4\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"io5\",\n    \"name\": \"Ionicons 5\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"md\",\n    \"name\": \"Material Design icons\",\n    \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"ti\",\n    \"name\": \"Typicons\",\n    \"projectUrl\": \"http://s-ings.com/typicons/\",\n    \"license\": \"CC BY-SA 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Github Octicons icons\",\n    \"projectUrl\": \"https://octicons.github.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"fi\",\n    \"name\": \"Feather\",\n    \"projectUrl\": \"https://feathericons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"lu\",\n    \"name\": \"Lucide\",\n    \"projectUrl\": \"https://lucide.dev/\",\n    \"license\": \"ISC\",\n    \"licenseUrl\": \"https://github.com/lucide-icons/lucide/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"gi\",\n    \"name\": \"Game Icons\",\n    \"projectUrl\": \"https://game-icons.net/\",\n    \"license\": \"CC BY 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n  },\n  {\n    \"id\": \"wi\",\n    \"name\": \"Weather Icons\",\n    \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n    \"license\": \"SIL OFL 1.1\",\n    \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n  },\n  {\n    \"id\": \"di\",\n    \"name\": \"Devicons\",\n    \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ai\",\n    \"name\": \"Ant Design Icons\",\n    \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"bs\",\n    \"name\": \"Bootstrap Icons\",\n    \"projectUrl\": \"https://github.com/twbs/icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ri\",\n    \"name\": \"Remix Icon\",\n    \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"fc\",\n    \"name\": \"Flat Color Icons\",\n    \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"gr\",\n    \"name\": \"Grommet-Icons\",\n    \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"hi\",\n    \"name\": \"Heroicons\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"hi2\",\n    \"name\": \"Heroicons 2\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"si\",\n    \"name\": \"Simple Icons\",\n    \"projectUrl\": \"https://simpleicons.org/\",\n    \"license\": \"CC0 1.0 Universal\",\n    \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n  },\n  {\n    \"id\": \"sl\",\n    \"name\": \"Simple Line Icons\",\n    \"projectUrl\": \"https://thesabbir.github.io/simple-line-icons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"im\",\n    \"name\": \"IcoMoon Free\",\n    \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/Keyamoon/IcoMoon-Free/blob/master/License.txt\"\n  },\n  {\n    \"id\": \"bi\",\n    \"name\": \"BoxIcons\",\n    \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/atisawd/boxicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"cg\",\n    \"name\": \"css.gg\",\n    \"projectUrl\": \"https://github.com/astrit/css.gg\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"vsc\",\n    \"name\": \"VS Code Icons\",\n    \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n    \"license\": \"CC BY 4.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"tb\",\n    \"name\": \"Tabler Icons\",\n    \"projectUrl\": \"https://github.com/tabler/tabler-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"tfi\",\n    \"name\": \"Themify Icons\",\n    \"projectUrl\": \"https://github.com/lykmapipo/themify-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/thecreation/standard-icons/blob/master/modules/themify-icons/LICENSE\"\n  },\n  {\n    \"id\": \"rx\",\n    \"name\": \"Radix Icons\",\n    \"projectUrl\": \"https://icons.radix-ui.com\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/radix-ui/icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"pi\",\n    \"name\": \"Phosphor Icons\",\n    \"projectUrl\": \"https://github.com/phosphor-icons/core\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/phosphor-icons/core/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"lia\",\n    \"name\": \"Icons8 Line Awesome\",\n    \"projectUrl\": \"https://icons8.com/line-awesome\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/icons8/line-awesome/blob/master/LICENSE.md\"\n  }\n]","import React from \"react\";\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React from \"react\";\nimport { IconContext, DefaultContext } from \"./iconContext\";\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\nexport function GenIcon(data) {\n  // eslint-disable-next-line react/display-name\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function (conf) {\n    var attr = props.attr,\n      size = props.size,\n      title = props.title,\n      svgProps = __rest(props, [\"attr\", \"size\", \"title\"]);\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + \" \" : \"\") + props.className;\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign(__assign({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MenuBar","isMenuOpen","setIsMenuOpen","useState","React","className","Link","to","AiOutlineHome","size","AiOutlineContacts","AiOutlineRise","AiOutlineFire","motion","button","onClick","whileTap","rotate","scale","AiOutlineClose","AiOutlineMenu","div","initial","x","y","opacity","animate","transition","type","duration","Layout","_ref","children","DefaultContext","color","undefined","style","attr","IconContext","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Tree2Element","tree","map","node","tag","key","child","GenIcon","data","props","IconBase","elem","conf","title","svgProps","computedSize","stroke","fill","strokeWidth","height","width","xmlns","Consumer","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","canHandoff","window","HandoffAppearAnimations","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","valueTarget","noop","any","Queue","constructor","order","scheduled","add","process","push","remove","index","splice","delete","clear","stepsOrder","schedule","cancel","cancelFrame","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","keepAlive","immediate","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","performance","now","createRenderBatcher","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","from","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","iterations","direction","animateStyle","owner","syncStart","timeline","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute"],"sourceRoot":""}